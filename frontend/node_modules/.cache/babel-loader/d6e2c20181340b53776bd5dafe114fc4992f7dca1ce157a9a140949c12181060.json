{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashu\\\\Desktop\\\\Practise\\\\NewReact\\\\MPA\\\\12-adv-starting-project\\\\frontend\\\\src\\\\Pages\\\\EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EventDetailPage() {\n  _s();\n  const data = useLoaderData();\n  const arr = [];\n  arr.push(data.event);\n  console.log(arr);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: arr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport const loader = async ({\n  params\n}) => {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/');\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for this event'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useLoaderData","json","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","arr","push","event","console","log","children","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Users/Ashu/Desktop/Practise/NewReact/MPA/12-adv-starting-project/frontend/src/Pages/EventDetailPage.js"],"sourcesContent":["import { useLoaderData,json} from \"react-router-dom\";\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nexport default function EventDetailPage() {\r\n  const data = useLoaderData()\r\n  const arr = []\r\n  arr.push(data.event)\r\n  console.log(arr)\r\n  return (<>\r\n    <EventsList events={arr}/>\r\n    </>\r\n  )\r\n}\r\nexport const loader = async({params}) => {\r\n  const id = params.eventId\r\n  const response = await fetch('http://localhost:8080/events/');\r\n\r\n  if(!response.ok){\r\n    throw json({message: 'Could not fetch details for this event'},{\r\n      status: 500\r\n    })\r\n  }else{\r\n    return response;\r\n  }\r\n\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAACC,IAAI,QAAO,kBAAkB;AACpD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAMC,IAAI,GAAGT,aAAa,CAAC,CAAC;EAC5B,MAAMU,GAAG,GAAG,EAAE;EACdA,GAAG,CAACC,IAAI,CAACF,IAAI,CAACG,KAAK,CAAC;EACpBC,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC;EAChB,oBAAQN,OAAA,CAAAE,SAAA;IAAAS,QAAA,eACNX,OAAA,CAACF,UAAU;MAACc,MAAM,EAAEN;IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBACxB,CAAC;AAEP;AAACZ,EAAA,CATuBD,eAAe;EAAA,QACxBP,aAAa;AAAA;AAAAqB,EAAA,GADJd,eAAe;AAUvC,OAAO,MAAMe,MAAM,GAAG,MAAAA,CAAM;EAACC;AAAM,CAAC,KAAK;EACvC,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;EAE7D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;IACd,MAAM3B,IAAI,CAAC;MAAC4B,OAAO,EAAE;IAAwC,CAAC,EAAC;MAC7DC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAI;IACH,OAAOJ,QAAQ;EACjB;AAEF,CAAC;AAAA,IAAAL,EAAA;AAAAU,YAAA,CAAAV,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}