{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashu\\\\Desktop\\\\Practise\\\\NewReact\\\\MPA\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport Home from './Pages/Home';\nimport EventPage from './Pages/EventPage';\nimport EventDetailPage from './Pages/EventDetailPage';\nimport NewEventPage from './Pages/NewEventPage';\nimport EditEventPage from './Pages/EditEventPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst route = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 24\n  }, this)\n}, {\n  path: '/eventPage',\n  element: /*#__PURE__*/_jsxDEV(EventPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 35\n  }, this)\n}, {\n  path: '/eventDetailPage',\n  element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 41\n  }, this)\n}, {\n  path: '/newEventPage',\n  element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 38\n  }, this)\n}, {\n  path: '/editEventPage',\n  element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 39\n  }, this)\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: route\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","Home","EventPage","EventDetailPage","NewEventPage","EditEventPage","jsxDEV","_jsxDEV","route","path","element","fileName","_jsxFileName","lineNumber","columnNumber","App","router","_c","$RefreshReg$"],"sources":["C:/Users/Ashu/Desktop/Practise/NewReact/MPA/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport Home from './Pages/Home';\nimport EventPage from './Pages/EventPage';\nimport EventDetailPage from './Pages/EventDetailPage';\nimport NewEventPage from './Pages/NewEventPage';\nimport EditEventPage from './Pages/EditEventPage';\n\nconst route = createBrowserRouter([\n  {path:'/' , element: <Home />},\n    {path:'/eventPage' , element: <EventPage />},\n    {path:'/eventDetailPage' , element: <EventDetailPage />},\n    {path:'/newEventPage' , element: <NewEventPage />},\n    {path:'/editEventPage' , element: <EditEventPage />}\n  \n])\n\nfunction App() {\n  return <RouterProvider router={route}/>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,aAAa,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,KAAK,GAAGT,mBAAmB,CAAC,CAChC;EAACU,IAAI,EAAC,GAAG;EAAGC,OAAO,eAAEH,OAAA,CAACN,IAAI;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC,CAAC,EAC5B;EAACL,IAAI,EAAC,YAAY;EAAGC,OAAO,eAAEH,OAAA,CAACL,SAAS;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC,CAAC,EAC5C;EAACL,IAAI,EAAC,kBAAkB;EAAGC,OAAO,eAAEH,OAAA,CAACJ,eAAe;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC,CAAC,EACxD;EAACL,IAAI,EAAC,eAAe;EAAGC,OAAO,eAAEH,OAAA,CAACH,YAAY;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC,CAAC,EAClD;EAACL,IAAI,EAAC,gBAAgB;EAAGC,OAAO,eAAEH,OAAA,CAACF,aAAa;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC,CAAC,CAEvD,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EACb,oBAAOR,OAAA,CAACP,cAAc;IAACgB,MAAM,EAAER;EAAM;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACzC;AAACG,EAAA,GAFQF,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}